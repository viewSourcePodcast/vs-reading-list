{"version":3,"file":"bookmark/view.js","mappings":";;;;;;;;;AAAA;AACA,aAAa,6BAA6B;AAC1C;AACA;AACA;;;;;;SCJA;SACA;;SAEA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;;SAEA;SACA;;SAEA;SACA;SACA;;;;;UCtBA;UACA;UACA;UACA,uDAAuD,iBAAiB;UACxE;UACA,gDAAgD,aAAa;UAC7D;;;;;;;;;;;;ACNA;AACA;AACA;AAC6D;AAE7DA,+DAAK,CAAC,iBAAiB,EAAE;EACvBE,OAAO,EAAE;IACPC,MAAM,EAAEA,CAAA,KAAM;MACZ,MAAMC,OAAO,GAAGH,oEAAU,CAAC,CAAC;MAC5BG,OAAO,CAACC,YAAY,GAAG,CAACD,OAAO,CAACC,YAAY;;MAE5C;MACA,IAAIC,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,IAAI,IAAI;MAClEF,YAAY,GAAGG,IAAI,CAACC,KAAK,CAACJ,YAAY,CAAC;;MAEvC;MACA,IAAIF,OAAO,CAACC,YAAY,EAAE;QACxBC,YAAY,CAACK,IAAI,CAACP,OAAO,CAACQ,MAAM,CAAC;MACnC,CAAC,MAAM;QACL,MAAMC,KAAK,GAAGP,YAAY,CAACQ,OAAO,CAACV,OAAO,CAACQ,MAAM,CAAC;QAClDN,YAAY,CAACS,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;MAC/B;;MAEA;MACAN,YAAY,CAACS,OAAO,CAAC,iBAAiB,EAAEP,IAAI,CAACQ,SAAS,CAACX,YAAY,CAAC,CAAC;IACvE;EACF,CAAC;EACDY,SAAS,EAAE;IACTC,eAAe,EAAEA,CAAA,KAAM;MACrB,MAAM;QAAEd,YAAY;QAAEO;MAAO,CAAC,GAAGX,oEAAU,CAAC,CAAC;MAC7C;MACAmB,OAAO,CAACC,GAAG,CAAE,GAAET,MAAO,mBAAkBP,YAAa,EAAC,CAAC;IACzD,CAAC;IACDiB,IAAI,EAAEA,CAAA,KAAM;MACV,MAAM;QAAEV;MAAO,CAAC,GAAGX,oEAAU,CAAC,CAAC;;MAE/B;MACA,IAAIK,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,IAAI,IAAI;MAClEF,YAAY,GAAGG,IAAI,CAACC,KAAK,CAACJ,YAAY,CAAC;;MAEvC;MACA,IAAIA,YAAY,CAACiB,QAAQ,CAACX,MAAM,CAAC,EAAE;QACjCZ,+DAAK,CAAC,iBAAiB,CAAC,CAACE,OAAO,CAACC,MAAM,CAAC,CAAC;MAC3C;IACF;EACF;AACF,CAAC,CAAC,C","sources":["webpack://vs-reading-list/external module \"@wordpress/interactivity\"","webpack://vs-reading-list/webpack/bootstrap","webpack://vs-reading-list/webpack/runtime/make namespace object","webpack://vs-reading-list/./src/bookmark/view.js"],"sourcesContent":["var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * WordPress dependencies\n */\nimport { store, getContext } from \"@wordpress/interactivity\";\n\nstore(\"vs-reading-list\", {\n  actions: {\n    toggle: () => {\n      const context = getContext();\n      context.isBookmarked = !context.isBookmarked;\n\n      // Get all bookmarks from local storage or an empty array.\n      let allBookmarks = localStorage.getItem(\"vs-reading-list\") || \"[]\";\n      allBookmarks = JSON.parse(allBookmarks);\n\n      // Add or remove from our array of bookmarks.\n      if (context.isBookmarked) {\n        allBookmarks.push(context.postId);\n      } else {\n        const index = allBookmarks.indexOf(context.postId);\n        allBookmarks.splice(index, 1);\n      }\n\n      // Save the updated array of bookmarks to local storage.\n      localStorage.setItem(\"vs-reading-list\", JSON.stringify(allBookmarks));\n    },\n  },\n  callbacks: {\n    logIsBookmarked: () => {\n      const { isBookmarked, postId } = getContext();\n      // Log the value of `isBookmarked` each time it changes.\n      console.log(`${postId} is bookmarked: ${isBookmarked}`);\n    },\n    init: () => {\n      const { postId } = getContext();\n\n      // Get all bookmarks from local storage or an empty array.\n      let allBookmarks = localStorage.getItem(\"vs-reading-list\") || \"[]\";\n      allBookmarks = JSON.parse(allBookmarks);\n\n      // Check if the post is already bookmarked and toggle.\n      if (allBookmarks.includes(postId)) {\n        store(\"vs-reading-list\").actions.toggle();\n      }\n    },\n  },\n});\n"],"names":["store","getContext","actions","toggle","context","isBookmarked","allBookmarks","localStorage","getItem","JSON","parse","push","postId","index","indexOf","splice","setItem","stringify","callbacks","logIsBookmarked","console","log","init","includes"],"sourceRoot":""}